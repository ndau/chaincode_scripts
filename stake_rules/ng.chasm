;  ----- ---- --- -- -
;  Copyright 2019 Oneiro NA, Inc. All Rights Reserved.
; 
;  Licensed under the Apache License 2.0 (the "License").  You may not use
;  this file except in compliance with the License.  You can obtain a copy
;  in the file LICENSE in the source distribution or at
;  https://www.apache.org/licenses/LICENSE-2.0.txt
;  - -- --- ---- -----

; Node Goodness (active node ranking)
;
; STACK:
;   total stake
;   account data
;   address
;   total delegation
;   vote history for this node
;   timestamp of most recent RegisterNode
;
; We compute the goodness according to the following pseudocode:
;
;
; history_size = 20
; genesis = <official timestamp of blockchain genesis>
;
; def age_bonus(registration):
;   return ((now-registration)/(now-genesis))**4
;
; def node_goodness(total_stake, total_delegated_ndau, vote_stats, registration):
;   weight = total_stake + total_delegated_ndau
;
;   # penalize nodes that don't participate
;   penalties = sum(2 for v in vote_stats if not v.voted)
;   # penalize participation against consensus more strongly
;   penalties += sum(5 for v in vote_stats if v.against_consensus)
;
;   penalty_denominator = 2 * history_size
;   if penalties > penalty_denominator:
;     return 0
;   return weight * (1-(penalties / penalty_denominator)) * age_bonus(registration)

GENESIS = 2019-05-11T03:46:40.570549Z ; actually block 1 time, but close enough

VOTED = 121
BYZANTINE = 122
VOTEDF = 123
BYZANTINEF = 124

; multiply stake weight by this value to increase its importance relative to delegation power
STAKE_WEIGHT = 1

; history size is defined at https://github.com/ndau/metanode/blob/180b6970aaf3df5cdd2ba05607e5ca36e08f5d56/pkg/meta/state/vote_stats.go#L14
HISTORY_SIZE = 20

; don't change this
RATE_DENOMINATOR = 1000000000000    ; 10^12

handler EVENT_DEFAULT {
    ;; start by computing the age bonus:
    ;;   ((now-registration)/(now-genesis))^4
                                    ; rn_ts vote_history total_delegation address account_data total_stake
    now                             ; rn_ts vote_history total_delegation address account_data total_stake now
    roll 6                          ; vote_history total_delegation address account_data total_stake now rn_ts
    sub                             ; vote_history total_delegation address account_data total_stake age
    push RATE_DENOMINATOR           ; vote_history total_delegation address account_data total_stake age RATE_DENOMINATOR
    now                             ; vote_history total_delegation address account_data total_stake age RATE_DENOMINATOR now
    pusht GENESIS                   ; vote_history total_delegation address account_data total_stake age RATE_DENOMINATOR now GENESIS
    sub                             ; vote_history total_delegation address account_data total_stake age RATE_DENOMINATOR sys_age
    muldiv                          ; vote_history total_delegation address account_data total_stake age_bonus^1
    ;; we have the base fraction for the age bonus; now exponentiate it
    dup
    push RATE_DENOMINATOR
    muldiv                          ; vote_history total_delegation address account_data total_stake age_bonus^2
    dup
    push RATE_DENOMINATOR
    muldiv                          ; vote_history total_delegation address account_data total_stake age_bonus
    ;; now tuck this away at the bottom of the stack where we can retrieve it later
    tuck 5                          ; age_bonus vote_history total_delegation address account_data total_stake


    push STAKE_WEIGHT               ; vote_history total_delegation address account_data total_stake stake_weight
    mul                             ; vote_history total_delegation address account_data weighted_stake

    roll 3                          ; vote_history address account_data weighted_stake total_delegation
    add                             ; vote_history address account_data weight
    roll 3                          ; address account_data weight vote_history

    ;; past this point we will never use address or account_data; they still exist
    ;; at the bottom of the stack, but for expediency and conciseness we will
    ;; no longer write them out

    deco non_vote_penalty VOTEDF    ; weight vote_history
    deco byzantine_penalty BYZANTINEF; weight vote_history

    dup                             ; weight vote_history vote_history
    fieldl VOTEDF                   ; weight vote_history vote_penalty_list
    sum                             ; weight vote_history vote_penalty

    swap                            ; weight vote_penalty vote_history
    fieldl BYZANTINEF               ; weight vote_penalty byzantine_penalty_list
    sum                             ; weight vote_penalty byzantine_penalty

    add                             ; weight penalty
    dup                             ; weight penalty penalty
    push HISTORY_SIZE               ; weight penalty penalty history_size
    push 2
    mul
    gt                              ; weight penalty (penalty > history_size)
    ifnz                            ; if
        zero
        ret
    endif

                                    ; weight penalty
    push HISTORY_SIZE               ; weight penalty history_size
    push 2
    mul
    push RATE_DENOMINATOR           ; weight penalty history_size rate_denominator
    swap                            ; weight penalty rate_denominator history_size
    muldiv                          ; weight penalty_pct
    neg                             ; weight (-penalty_pct)
    push RATE_DENOMINATOR           ; weight (-penalty_pct) rate_denominator
    add                             ; weight (1-penalty_pct)
    push RATE_DENOMINATOR           ; weight (1-penalty_pct) rate_denominator
    muldiv                          ; penalized_weight

    ;; retrieve the age bonus
    ;; the full stack:
                                    ; age_bonus address account_data penalized_weight
    roll 3                          ; address account_data penalized_weight age_bonus
    push 1000000                    ; 10^6, not 10^12
;    push RATE_DENOMINATOR           ; penalized_weight age_bonus RATE_DENOMINATOR
    muldiv                          ; goodness
}

; called via deco; therefore needs no args: it always gets a list entry
func non_vote_penalty(0) {
                                    ; node_round_stats
    field VOTED                     ; stats_voted
    ifz                             ; zero == false == didn't vote
        push 2
    else
        zero
    endif
}

; called via deco; therefore needs no args: it always gets a list entry
func byzantine_penalty(0) {
                                    ; node_round_stats
    field BYZANTINE                 ; stats_againstconsensus
    ifnz                            ; == true == voted against consensus
        push 5
    else
        zero
    endif
}
