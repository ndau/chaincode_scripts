;  ----- ---- --- -- -
;  Copyright 2019 Oneiro NA, Inc. All Rights Reserved.
; 
;  Licensed under the Apache License 2.0 (the "License").  You may not use
;  this file except in compliance with the License.  You can obtain a copy
;  in the file LICENSE in the source distribution or at
;  https://www.apache.org/licenses/LICENSE-2.0.txt
;  - -- --- ---- -----

; Node Goodness (active node ranking)
;
; STACK:
;   stake (scaled to (stake/total system stake) * 10,000)
;   account data
;   address
;   delegation (scaled to (delegation/total system delegation) * 10,000)
;   vote history for this node
;   timestamp of most recent RegisterNode
;
; We compute the goodness according to the following pseudocode:
;
; voting history size is defined at https://github.com/ndau/metanode/blob/180b6970aaf3df5cdd2ba05607e5ca36e08f5d56/pkg/meta/state/vote_stats.go#L14
; it's currently (2021-04-19) 20 but this code is independent of its size
;
; assume that the longer the node's been registered the better it is,
; so weight it linearly up to 100 over 90 days (>90 is 100)
; we add 1 if it's 0, so the range is 1 to 100
;
; def age_bonus(registration):
;   return min(AGE_BONUS_SCALE, AGE_BONUS_SCALE * (now-registration)/NINETY_DAYS)
;
; def node_goodness(staked_ndau, delegated_ndau, vote_stats, registration):
;   staked_ndau and delegated_ndau are each a fraction of the system total, scaled to 10,000
;
;   weight = stake + delegated_ndau
;
;   # penalize nodes that don't participate
;   penalties = sum(NONVOTE_PENALTY for v in vote_stats if not v.voted)
;   # penalize participation against consensus more strongly
;   penalties += sum(BYZANTINEVOTE_PENALTY for v in vote_stats if v.against_consensus)
;
;   if penalties > PENALTY_DENOMINATOR:
;     return 1
;
;   return weight * (PENALTY_DENOMINATOR - penalties) * age_bonus(registration)

THIRTY_DAYS = 2_592_000_000_000      ; 60 * 60 * 24 * 30 * 1_000_000

; Voting fields in the vote_history list

VOTED = 121
BYZANTINE = 122
VOTEDF = 123
BYZANTINEF = 124

NONVOTE_PENALTY = 5
BYZANTINEVOTE_PENALTY = 25
PENALTY_DENOMINATOR = 100  ; 4 Byzantine votes or 20 non-votes out of 20 knocks you back to 1

; multiply stake weight by this value to increase its importance relative to delegation power
; each is a fraction of total system values to make proportional weights easier

STAKE_WEIGHT = 1

; age bonus ranges from 1 to AGE_BONUS_SCALE

AGE_BONUS_SCALE = 100


; scale the computed power to a more readable number
; maximum possible goodness is (10,000 + 10,000) * 100 * 100 = 200,000,000

GOODNESS_DENOMINATOR = 2_000        ; Maximum total goodness is 200,000,000 so we scale to 100,000

handler EVENT_DEFAULT {
    ;
    ; Compute the age bonus:
                                    ; rn_ts vote_history delegation address account_data stake
    now                             ; rn_ts vote_history delegation address account_data stake now
    roll 6                          ; vote_history delegation address account_data stake now rn_ts
    sub                             ; vote_history delegation address account_data stake age
    push AGE_BONUS_SCALE            ; vote_history delegation address account_data stake age AGE_BONUS_SCALE
    push THIRTY_DAYS                ; vote_history delegation address account_data stake age AGE_BONUS_SCALE THIRTY_DAYS
    muldiv                          ; vote_history delegation address account_data stake age_bonus

    ; Scale 
    dup                             ; vote_history delegation address account_data stake age_bonus age_bonus
    push AGE_BONUS_SCALE            ; vote_history delegation address account_data stake age_bonus age_bonus AGE_BONUS_SCALE
    gt                              ; vote_history delegation address account_data stake age_bonus (age_bonus > AGE_BONUS_SCALE)
    ifnz                            ; vote_history delegation address account_data stake age_bonus
        drop                        ; vote_history delegation address account_data stake
        push AGE_BONUS_SCALE        ; vote_history delegation address account_data stake AGE_BONUS_SCALE
    endif                           ; vote_history delegation address account_data stake scaled_age_bonus

    ; Since the bonus is a multiplier from 0 to 100, add 1 if it's 0 so brand-new nodes don't get 0 goodness

    dup                             ; vote_history delegation address account_data stake scaled_age_bonus scaled_age_bonus
    ifz                             ; vote_history delegation address account_data stake scaled_age_bonus
        drop                        ; vote_history delegation address account_data stake
        one                         ; vote_history delegation address account_data stake 1
    endif

    tuck 5                          ; scaled_age_bonus vote_history delegation address account_data stake

    push STAKE_WEIGHT               ; scaled_age_bonus vote_history delegation address account_data stake STAKE_WEIGHT
    mul                             ; scaled_age_bonus vote_history delegation address account_data weighted_stake

    roll 3                          ; scaled_age_bonus vote_history address account_data weighted_stake delegation
    add                             ; scaled_age_bonus vote_history address account_data weight
    roll 3                          ; scaled_age_bonus address account_data weight vote_history

    deco non_vote_penalty VOTEDF    ; scaled_age_bonus address account_data weight vote_history
    deco byzantine_penalty BYZANTINEF ; scaled_age_bonus address account_data weight vote_history

    dup                             ; scaled_age_bonus address account_data weight vote_history vote_history
    fieldl VOTEDF                   ; scaled_age_bonus address account_data weight vote_history vote_penalty_list
    sum                             ; scaled_age_bonus address account_data weight vote_history vote_penalty

    swap                            ; scaled_age_bonus address account_data weight vote_penalty vote_history
    fieldl BYZANTINEF               ; scaled_age_bonus address account_data weight vote_penalty byzantine_penalty_list
    sum                             ; scaled_age_bonus address account_data weight vote_penalty byzantine_penalty

    add                             ; scaled_age_bonus address account_data weight penalty
                                    ; scaled_age_bonus address account_data weight penalty
    push PENALTY_DENOMINATOR        ; scaled_age_bonus address account_data weight penalty PENALTY_DENOMINATOR
    swap                            ; scaled_age_bonus address account_data weight PENALTY_DENOMINATOR penalty
    sub                             ; scaled_age_bonus address account_data weight (PENALTY_DENOMINATOR - penalty)
    mul                             ; scaled_age_bonus address account_data penalized_weight

    roll 3                          ; address account_data penalized_weight scaled_age_bonus
    push GOODNESS_DENOMINATOR       ; address account_data penalized_weight scaled_age_bonus GOODNESS_DENOMINATOR
    muldiv                          ; address account_data goodness

; If the final goodness comes out to 0, set it to 1 so the node isn't
; booted out of the validator set with no way to return.

    dup                             ; address account_data goodness goodness
    ifz                             ; address account_data goodness
        one                         ; address account_data goodness 1
    endif
}

; called via deco; therefore needs no args: it always gets a list entry
func non_vote_penalty(0) {
                                    ; node_round_stats
    field VOTED                     ; stats_voted
    ifz                             ; zero == false == didn't vote
        push NONVOTE_PENALTY
    else
        zero
    endif
}

; called via deco; therefore needs no args: it always gets a list entry
func byzantine_penalty(0) {
                                    ; node_round_stats
    field BYZANTINE                 ; stats_againstconsensus
    ifnz                            ; nonzero== true == voted against consensus
        push BYZANTINEVOTE_PENALTY
    else
        zero
    endif
}
